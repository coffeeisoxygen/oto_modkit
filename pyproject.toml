[project]
name = "oto-modkit"
dynamic = ["version"]
description = "add on untuk software server pulsa otomax."
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    "loguru>=0.7.0",
    "pyodbc>=5.2.0",
    "sqlalchemy>=2.0.41",
    "streamlit>=1.46.1",
]

[build-system]
requires = ["setuptools", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = []
package-dir = { "" = "." }

[tool.setuptools.packages.find]
where = [""]

[tool.setuptools_scm]
write_to = "src/_version.py"
version_scheme = "guess-next-dev"
local_scheme = "no-local-version"
fallback_version = "0.1.0"

[project.scripts]
start = "src.main:main"

[tool.uv]
package = true

[dependency-groups]
dev = [
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-cov>=6.2.1",
    "pytest-html>=4.1.1",
    "pytest-mock>=3.14.1",
    "ruff>=0.11.13",
]

[tool.ruff]
builtins = ["_"]
fix = true
show-fixes = true
src = ["src", "tests"]
target-version = "py312"
line-length = 88
lint.fixable = ["ALL"]
lint.unfixable = []
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "D",   # pydocstyle (docstrings)
    "ANN", # flake8-annotations (type hints)
    "UP",  # pyupgrade (modern Python syntax)
    "B",   # flake8-bugbear (common bugs)
    "SIM", # flake8-simplify (simplify code)
    "C90", # flake8-comprehensions (comprehension optimizations)
    "T20", # flake8-type-checking (type checking)
    "TRY", # flake8-try-except (try-except optimizations)
    "RUF",  # ruff (general code quality)
    "PERF", # ruff performance checks
    "ARG",  # ruff argument checks
    "PLC",  # ruff plugin checks
    "N",   # ruff naming conventions
    "F",   # ruff formatting checks
    "I",   # ruff import checks
]
lint.ignore = [
    "E501",    # panjang baris
    "D100",    # docstring modul
    "D104",    # docstring package
    "D107",    # docstring __init__
    "D101",    # docstring class
    "D102",    # docstring method
    "D105",    # docstring magic method
    "ANN201",  # `cls`
    "ANN202",  # `self`
    "ANN401",  # Any
    "ANN204",  # __init__ return
    "ANN002",  # *args
    "ANN003",  # **kwargs
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "ANN"]
"scripts/*" = ["D100"]
"__init__.py" = ["D104"]
"_version.py" = ["D", "ANN", "E", "W", "F", "I", "UP", "B"]
"src/deprecated/*" = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 60
skip-magic-trailing-comma = false

[tool.ruff.lint.isort]
split-on-trailing-comma = true

[tool.coverage.run]
source = ["src"]
data_file = ".reports/coverage/.coverage"
omit = [
    "*/tests/*",
    "*/_version.py",
    "*/scripts/*",
    "*/__init__.py",
    "*/site-packages/*",
    "*/.venv/*",
    "*/shibokensupport/*",
    "*/pyscript/*",
    "*/signature_bootstrap.py",
    "src/__init__.py",
    "src/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = false
skip_empty = true

[tool.coverage.html]
directory = ".reports/coverage/html"
skip_covered = false
skip_empty = true

[tool.pytest.ini_options]
generate_report_on_test = true
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
pythonpath = ["src"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--no-header",
    "--disable-warnings",
    "--cov=src",
    "--cov-report=html:.reports/coverage",
    "--cov-report=term-missing:skip-covered",
    "--html=.reports/tests/report.html",
    "--self-contained-html",
]
log_cli = false
log_cli_level = "WARNING"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_auto_indent = true
markers = [
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]
minversion = "8.0"
norecursedirs = [
    ".*",
    "build",
    "dist",
    "*.egg",
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    ".pytest_cache",
    ".reports",
]
